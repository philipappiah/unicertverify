openapi: "3.0.0"
info:
  version: "v1"
  title: UnicertVerify Transaction Service Open API
  license:
    name: MIT
servers:
  - url: http://localhost:4000
paths:

  /transactions:

    post:
      summary: Add Transaction
      operationId: addTransaction
      tags:
        - transactions
      requestBody:
          required: true
          description: The transaction to add
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Transaction"
                  
      responses:
        '201':
          description: Transaction created
        '422': 
          description: Validation error
       
    get:
      summary: List all transations
      operationId: listTransactions
      tags:
        - transactions
      parameters:
        - name: limit
          in: query
          description: Number of items to return at one time
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A paged array of available transactions
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Transactions"

         
                        
  /transactions/{currencyId}:
    get:
      summary: Get a specific transaction
      operationId: showTransactionById
      tags:
        - transactions
      parameters:
        - name: transactionId
          in: path
          required: true
          description: The id of the transaction to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Transaction object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        '404':
          description: No Transaction found!
        '422': 
          description: cast error


  /Notification:

    post:
      summary: Add Notification
      operationId: addNotification
      tags:
        - notifications
      requestBody:
          required: true
          description: The notification to add
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Notification"
                  
      responses:
        '201':
          description: Notification created
        '422': 
          description: Validation error
       
    get:
      summary: List all notifications
      operationId: listNotifications
      tags:
        - notifications
      parameters:
        - name: limit
          in: query
          description: Number of items to return at one time
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A paged array of available notifications
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Notifications"

         
                        
  /notifications/{notificationId}:
    get:
      summary: Get notification by Id
      operationId: showNotificationById
      tags:
        - notifications
      parameters:
        - name: notififactionId
          in: path
          required: true
          description: The id of the notification to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Notification object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        '404':
          description: No Notification found!
        '422': 
          description: cast error
    


  
        
  
    
  

components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          description: string generated by the server/database; not part of input.
        txType:
          type: string
          description: Transaction type
        from:
          type: string
          description: Origin of transaction
        to:
          type: string
          description: Destination of transaction
        gasPrice:
          type: number
          description: Transaction cost in Eth. Unit is Gwei
        txHash:
          type: string
          desciption: Transaction hash
        isConfirmed:
          type: boolean
          description: True if transaction has been confirmed or false
       

    
    Notification:
      type: object
      properties:
        id:
          type: string
          description: string generated by the server/database; not part of input.
        message:
          type: string
          description: Notification message 
        notificationtype:
          type: string
          description: Type of notification
        from:
          type: string
          description: Origin of notification
        to:
          type: string
          description: Destination of notification
        hasRead:
          type: boolean
          description: True if notification has been read by recipient else false
      

    Transactions:
      type: array
      items:
        $ref: "#/components/schemas/Transaction"
    Notifications:
      type: array
      items:
        $ref: "#/components/schemas/Notification"

   